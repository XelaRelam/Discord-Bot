generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  bots      Bot[] /* User Bots                   */
  user_id   String   @id @unique /* UserId                      */
  createdAt DateTime @default(now()) /* User Joined Date            */
}

model Bot {
  botId       String   @unique /* Bot ID                      */
  userId      String /* Developer ID                */
  invite      Int      @default(0) /* Invite Perms                */
  createdAt   DateTime @default(now()) /* Date Added                  */
  library     String   @default("Unknown") /* Bot library                 */
  description String   @default("N/A") /* Bot Description             */
  prefix      String   @default("/") /* Bot Prefix                  */
  botBanned   Boolean  @default(false) /* If Bot is banned            */
  botAdded    Boolean  @default(false) /* If Bot is approved          */
  botAwaiting Boolean  @default(false) /* If Bot is awaiting approval */

  user User @relation(fields: [userId], references: [user_id], onUpdate: Cascade, onDelete: Cascade)

  @@id([botId])
}

model Thread {
  threadId   String   @id /* Id of the thread                   */
  userId     String   @unique /* User who own the thread            */
  botId      String   @unique /* The bot of which the thread is for */
  createdAt  DateTime @default(now()) /* Date Created                       */
  lastActive DateTime @default(now()) /* Last activity                      */
}

model Starboard {
  id          String   @id @default(cuid()) // Unique identifier
  messageId   String   @unique // Original message ID
  starboardId String? // Starboard message ID (null if not posted yet)
  channelId   String // The channel where the original message was sent
  authorId    String // Message author
  starsCount  Int      @default(0) // Current star count
  createdAt   DateTime @default(now())
}

model StickyMessage {
  id        Int    @id @default(autoincrement())
  channelID String @unique
  messageID String
}
